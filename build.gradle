buildscript {
    repositories {
        jcenter()
        // enable this to use snapshot versions of Gretty:
        // maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}
version = '1.0'
group = 'co.tyec.layeredTestingExamples'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    //compile 'ch.qos.logback:logback-classic:1.1.3'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.22.1'

    testCompile 'org.glassfish.jersey.core:jersey-client:2.22.1'
    testCompile 'org.glassfish.jersey.test-framework:jersey-test-framework-core:2.22.1'

    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.22.1'
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:2.22.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // integration testing
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.52.0'
    testCompile group: 'com.paulhammant', name: 'ngwebdriver', version: '0.9.5'
}

repositories {
    mavenCentral()
}

sourceSets {
//    integrationTest {
//        java {
//            compileClasspath += main.output + test.output
//            runtimeClasspath += main.output + test.output
//            srcDir file('src/integrationTest/java')
//        }
//        resources.srcDir file('src/integrationTest/resources')
//    }
    test {
        java {
            srcDirs += file('src/integrationTest/java')
            srcDirs += file('src/restTest/java')
        }
        resources {
            srcDirs += file('src/integrationTest/resources')
            srcDirs += file('src/restTest/resources')
        }
    }
}

gretty {
    port = 8888
}

// Unit test
test {
    exclude "**/*IntegrationTest.*"
    exclude "**/*RestTest.*"
    //outputs.upToDateWhen { false }
}
task integrationTest(type: Test) {
    group 'verification'
    dependsOn 'test', 'restTest', 'appBeforeIntegrationTest'
    finalizedBy 'appAfterIntegrationTest'
    mustRunAfter 'test', 'restTest'
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
    include "**/*IntegrationTest.*"
}

task restTest(type: Test) {
    group 'verification'
    dependsOn 'test'
    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
    // include is file path in out classes output dir.
    // which is really annoying, because you don't know which sourceDir it came from
    include "**/*RestTest.*"
}


check {
    dependsOn 'integrationTest'
    dependsOn 'restTest'
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed', 'failed', 'skipped'
    }
    reports.html.destination = file("${reporting.baseDir}/${name}")
}